// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mult_accel_core (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_data_V_dout,
        in_stream_data_V_empty_n,
        in_stream_data_V_read,
        in_stream_keep_V_dout,
        in_stream_keep_V_empty_n,
        in_stream_keep_V_read,
        in_stream_strb_V_dout,
        in_stream_strb_V_empty_n,
        in_stream_strb_V_read,
        in_stream_user_V_dout,
        in_stream_user_V_empty_n,
        in_stream_user_V_read,
        in_stream_last_V_dout,
        in_stream_last_V_empty_n,
        in_stream_last_V_read,
        in_stream_id_V_dout,
        in_stream_id_V_empty_n,
        in_stream_id_V_read,
        in_stream_dest_V_dout,
        in_stream_dest_V_empty_n,
        in_stream_dest_V_read,
        out_stream_data_V_din,
        out_stream_data_V_full_n,
        out_stream_data_V_write,
        out_stream_keep_V_din,
        out_stream_keep_V_full_n,
        out_stream_keep_V_write,
        out_stream_strb_V_din,
        out_stream_strb_V_full_n,
        out_stream_strb_V_write,
        out_stream_user_V_din,
        out_stream_user_V_full_n,
        out_stream_user_V_write,
        out_stream_last_V_din,
        out_stream_last_V_full_n,
        out_stream_last_V_write,
        out_stream_id_V_din,
        out_stream_id_V_full_n,
        out_stream_id_V_write,
        out_stream_dest_V_din,
        out_stream_dest_V_full_n,
        out_stream_dest_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_stream_data_V_dout;
input   in_stream_data_V_empty_n;
output   in_stream_data_V_read;
input  [3:0] in_stream_keep_V_dout;
input   in_stream_keep_V_empty_n;
output   in_stream_keep_V_read;
input  [3:0] in_stream_strb_V_dout;
input   in_stream_strb_V_empty_n;
output   in_stream_strb_V_read;
input  [3:0] in_stream_user_V_dout;
input   in_stream_user_V_empty_n;
output   in_stream_user_V_read;
input  [0:0] in_stream_last_V_dout;
input   in_stream_last_V_empty_n;
output   in_stream_last_V_read;
input  [4:0] in_stream_id_V_dout;
input   in_stream_id_V_empty_n;
output   in_stream_id_V_read;
input  [4:0] in_stream_dest_V_dout;
input   in_stream_dest_V_empty_n;
output   in_stream_dest_V_read;
output  [31:0] out_stream_data_V_din;
input   out_stream_data_V_full_n;
output   out_stream_data_V_write;
output  [3:0] out_stream_keep_V_din;
input   out_stream_keep_V_full_n;
output   out_stream_keep_V_write;
output  [3:0] out_stream_strb_V_din;
input   out_stream_strb_V_full_n;
output   out_stream_strb_V_write;
output  [3:0] out_stream_user_V_din;
input   out_stream_user_V_full_n;
output   out_stream_user_V_write;
output  [0:0] out_stream_last_V_din;
input   out_stream_last_V_full_n;
output   out_stream_last_V_write;
output  [4:0] out_stream_id_V_din;
input   out_stream_id_V_full_n;
output   out_stream_id_V_write;
output  [4:0] out_stream_dest_V_din;
input   out_stream_dest_V_full_n;
output   out_stream_dest_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_stream_data_V_read;
reg in_stream_keep_V_read;
reg in_stream_strb_V_read;
reg in_stream_user_V_read;
reg in_stream_last_V_read;
reg in_stream_id_V_read;
reg in_stream_dest_V_read;
reg out_stream_data_V_write;
reg out_stream_keep_V_write;
reg out_stream_strb_V_write;
reg out_stream_user_V_write;
reg out_stream_last_V_write;
reg out_stream_id_V_write;
reg out_stream_dest_V_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_pop_stream_fu_199_e_data_V_blk_n;
reg    in_stream_data_V_blk_n;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    grp_pop_stream_fu_199_e_keep_V_blk_n;
reg    in_stream_keep_V_blk_n;
wire    grp_pop_stream_fu_199_e_strb_V_blk_n;
reg    in_stream_strb_V_blk_n;
wire    grp_pop_stream_fu_199_e_user_V_blk_n;
reg    in_stream_user_V_blk_n;
wire    grp_pop_stream_fu_199_e_last_V_blk_n;
reg    in_stream_last_V_blk_n;
wire    grp_pop_stream_fu_199_e_id_V_blk_n;
reg    in_stream_id_V_blk_n;
wire    grp_pop_stream_fu_199_e_dest_V_blk_n;
reg    in_stream_dest_V_blk_n;
reg    out_stream_data_V_blk_n;
wire    ap_CS_fsm_state6;
reg    out_stream_keep_V_blk_n;
reg    out_stream_strb_V_blk_n;
reg    out_stream_user_V_blk_n;
reg    out_stream_last_V_blk_n;
reg    out_stream_id_V_blk_n;
reg    out_stream_dest_V_blk_n;
wire   [9:0] i_2_fu_232_p2;
reg   [9:0] i_2_reg_263;
wire    ap_CS_fsm_state2;
wire   [9:0] i_3_fu_249_p2;
reg   [9:0] i_3_reg_271;
wire    ap_CS_fsm_state4;
reg   [9:0] a_address0;
reg    a_ce0;
reg    a_we0;
wire   [31:0] a_q0;
reg   [9:0] b_address0;
reg    b_ce0;
reg    b_we0;
wire   [31:0] b_q0;
wire    grp_vector_multiply_hw_fu_193_ap_start;
wire    grp_vector_multiply_hw_fu_193_ap_done;
wire    grp_vector_multiply_hw_fu_193_ap_idle;
wire    grp_vector_multiply_hw_fu_193_ap_ready;
wire   [9:0] grp_vector_multiply_hw_fu_193_a_address0;
wire    grp_vector_multiply_hw_fu_193_a_ce0;
wire   [9:0] grp_vector_multiply_hw_fu_193_b_address0;
wire    grp_vector_multiply_hw_fu_193_b_ce0;
wire   [31:0] grp_vector_multiply_hw_fu_193_ap_return;
reg    grp_pop_stream_fu_199_ap_start;
wire    grp_pop_stream_fu_199_ap_done;
wire    grp_pop_stream_fu_199_ap_idle;
wire    grp_pop_stream_fu_199_ap_ready;
wire    grp_pop_stream_fu_199_e_data_V_read;
wire    grp_pop_stream_fu_199_e_keep_V_read;
wire    grp_pop_stream_fu_199_e_strb_V_read;
wire    grp_pop_stream_fu_199_e_user_V_read;
wire    grp_pop_stream_fu_199_e_last_V_read;
wire    grp_pop_stream_fu_199_e_id_V_read;
wire    grp_pop_stream_fu_199_e_dest_V_read;
wire   [31:0] grp_pop_stream_fu_199_ap_return;
wire    call_ret_push_stream_fu_219_ap_ready;
wire   [31:0] call_ret_push_stream_fu_219_ap_return;
reg   [9:0] i_reg_169;
reg    ap_block_state3;
reg   [9:0] i1_reg_181;
reg    ap_block_state5;
wire   [0:0] exitcond1_fu_226_p2;
reg    grp_vector_multiply_hw_fu_193_ap_start_reg;
wire   [0:0] exitcond_fu_243_p2;
wire   [63:0] tmp_fu_238_p1;
wire   [63:0] tmp_8_fu_255_p1;
reg    ap_block_state6;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_vector_multiply_hw_fu_193_ap_start_reg = 1'b0;
end

mult_accel_core_a #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
a_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(a_address0),
    .ce0(a_ce0),
    .we0(a_we0),
    .d0(grp_pop_stream_fu_199_ap_return),
    .q0(a_q0)
);

mult_accel_core_a #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
b_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_address0),
    .ce0(b_ce0),
    .we0(b_we0),
    .d0(grp_pop_stream_fu_199_ap_return),
    .q0(b_q0)
);

vector_multiply_hw grp_vector_multiply_hw_fu_193(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_vector_multiply_hw_fu_193_ap_start),
    .ap_done(grp_vector_multiply_hw_fu_193_ap_done),
    .ap_idle(grp_vector_multiply_hw_fu_193_ap_idle),
    .ap_ready(grp_vector_multiply_hw_fu_193_ap_ready),
    .a_address0(grp_vector_multiply_hw_fu_193_a_address0),
    .a_ce0(grp_vector_multiply_hw_fu_193_a_ce0),
    .a_q0(a_q0),
    .b_address0(grp_vector_multiply_hw_fu_193_b_address0),
    .b_ce0(grp_vector_multiply_hw_fu_193_b_ce0),
    .b_q0(b_q0),
    .ap_return(grp_vector_multiply_hw_fu_193_ap_return)
);

pop_stream grp_pop_stream_fu_199(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pop_stream_fu_199_ap_start),
    .ap_done(grp_pop_stream_fu_199_ap_done),
    .ap_idle(grp_pop_stream_fu_199_ap_idle),
    .ap_ready(grp_pop_stream_fu_199_ap_ready),
    .e_data_V_dout(in_stream_data_V_dout),
    .e_data_V_empty_n(in_stream_data_V_empty_n),
    .e_data_V_read(grp_pop_stream_fu_199_e_data_V_read),
    .e_keep_V_dout(in_stream_keep_V_dout),
    .e_keep_V_empty_n(in_stream_keep_V_empty_n),
    .e_keep_V_read(grp_pop_stream_fu_199_e_keep_V_read),
    .e_strb_V_dout(in_stream_strb_V_dout),
    .e_strb_V_empty_n(in_stream_strb_V_empty_n),
    .e_strb_V_read(grp_pop_stream_fu_199_e_strb_V_read),
    .e_user_V_dout(in_stream_user_V_dout),
    .e_user_V_empty_n(in_stream_user_V_empty_n),
    .e_user_V_read(grp_pop_stream_fu_199_e_user_V_read),
    .e_last_V_dout(in_stream_last_V_dout),
    .e_last_V_empty_n(in_stream_last_V_empty_n),
    .e_last_V_read(grp_pop_stream_fu_199_e_last_V_read),
    .e_id_V_dout(in_stream_id_V_dout),
    .e_id_V_empty_n(in_stream_id_V_empty_n),
    .e_id_V_read(grp_pop_stream_fu_199_e_id_V_read),
    .e_dest_V_dout(in_stream_dest_V_dout),
    .e_dest_V_empty_n(in_stream_dest_V_empty_n),
    .e_dest_V_read(grp_pop_stream_fu_199_e_dest_V_read),
    .ap_return(grp_pop_stream_fu_199_ap_return),
    .e_data_V_blk_n(grp_pop_stream_fu_199_e_data_V_blk_n),
    .e_keep_V_blk_n(grp_pop_stream_fu_199_e_keep_V_blk_n),
    .e_strb_V_blk_n(grp_pop_stream_fu_199_e_strb_V_blk_n),
    .e_user_V_blk_n(grp_pop_stream_fu_199_e_user_V_blk_n),
    .e_last_V_blk_n(grp_pop_stream_fu_199_e_last_V_blk_n),
    .e_id_V_blk_n(grp_pop_stream_fu_199_e_id_V_blk_n),
    .e_dest_V_blk_n(grp_pop_stream_fu_199_e_dest_V_blk_n)
);

push_stream call_ret_push_stream_fu_219(
    .ap_ready(call_ret_push_stream_fu_219_ap_ready),
    .v_read(grp_vector_multiply_hw_fu_193_ap_return),
    .ap_return(call_ret_push_stream_fu_219_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_vector_multiply_hw_fu_193_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond_fu_243_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_vector_multiply_hw_fu_193_ap_start_reg <= 1'b1;
        end else if ((grp_vector_multiply_hw_fu_193_ap_ready == 1'b1)) begin
            grp_vector_multiply_hw_fu_193_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_reg_181 <= 10'd0;
    end else if ((~((grp_pop_stream_fu_199_e_user_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_strb_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_keep_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_data_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_dest_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_id_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_last_V_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        i1_reg_181 <= i_3_reg_271;
    end
end

always @ (posedge ap_clk) begin
    if ((~((grp_pop_stream_fu_199_e_user_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_strb_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_keep_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_data_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_dest_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_id_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_last_V_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_169 <= i_2_reg_263;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_169 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_263 <= i_2_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_3_reg_271 <= i_3_fu_249_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        a_address0 = tmp_fu_238_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_address0 = grp_vector_multiply_hw_fu_193_a_address0;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((grp_pop_stream_fu_199_e_user_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_strb_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_keep_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_data_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_dest_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_id_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_last_V_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        a_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_ce0 = grp_vector_multiply_hw_fu_193_a_ce0;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((grp_pop_stream_fu_199_e_user_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_strb_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_keep_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_data_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_dest_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_id_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_last_V_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | (~((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0) | (grp_vector_multiply_hw_fu_193_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0) | (grp_vector_multiply_hw_fu_193_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        b_address0 = tmp_8_fu_255_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_address0 = grp_vector_multiply_hw_fu_193_b_address0;
    end else begin
        b_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((grp_pop_stream_fu_199_e_user_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_strb_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_keep_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_data_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_dest_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_id_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_last_V_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        b_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_ce0 = grp_vector_multiply_hw_fu_193_b_ce0;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((grp_pop_stream_fu_199_e_user_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_strb_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_keep_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_data_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_dest_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_id_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_last_V_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        b_we0 = 1'b1;
    end else begin
        b_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_pop_stream_fu_199_ap_start = 1'b1;
    end else begin
        grp_pop_stream_fu_199_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_data_V_blk_n = grp_pop_stream_fu_199_e_data_V_blk_n;
    end else begin
        in_stream_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_data_V_read = grp_pop_stream_fu_199_e_data_V_read;
    end else begin
        in_stream_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_dest_V_blk_n = grp_pop_stream_fu_199_e_dest_V_blk_n;
    end else begin
        in_stream_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_dest_V_read = grp_pop_stream_fu_199_e_dest_V_read;
    end else begin
        in_stream_dest_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_id_V_blk_n = grp_pop_stream_fu_199_e_id_V_blk_n;
    end else begin
        in_stream_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_id_V_read = grp_pop_stream_fu_199_e_id_V_read;
    end else begin
        in_stream_id_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_keep_V_blk_n = grp_pop_stream_fu_199_e_keep_V_blk_n;
    end else begin
        in_stream_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_keep_V_read = grp_pop_stream_fu_199_e_keep_V_read;
    end else begin
        in_stream_keep_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_last_V_blk_n = grp_pop_stream_fu_199_e_last_V_blk_n;
    end else begin
        in_stream_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_last_V_read = grp_pop_stream_fu_199_e_last_V_read;
    end else begin
        in_stream_last_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_strb_V_blk_n = grp_pop_stream_fu_199_e_strb_V_blk_n;
    end else begin
        in_stream_strb_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_strb_V_read = grp_pop_stream_fu_199_e_strb_V_read;
    end else begin
        in_stream_strb_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_user_V_blk_n = grp_pop_stream_fu_199_e_user_V_blk_n;
    end else begin
        in_stream_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_stream_user_V_read = grp_pop_stream_fu_199_e_user_V_read;
    end else begin
        in_stream_user_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_stream_data_V_blk_n = out_stream_data_V_full_n;
    end else begin
        out_stream_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0) | (grp_vector_multiply_hw_fu_193_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        out_stream_data_V_write = 1'b1;
    end else begin
        out_stream_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_stream_dest_V_blk_n = out_stream_dest_V_full_n;
    end else begin
        out_stream_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0) | (grp_vector_multiply_hw_fu_193_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        out_stream_dest_V_write = 1'b1;
    end else begin
        out_stream_dest_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_stream_id_V_blk_n = out_stream_id_V_full_n;
    end else begin
        out_stream_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0) | (grp_vector_multiply_hw_fu_193_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        out_stream_id_V_write = 1'b1;
    end else begin
        out_stream_id_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_stream_keep_V_blk_n = out_stream_keep_V_full_n;
    end else begin
        out_stream_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0) | (grp_vector_multiply_hw_fu_193_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        out_stream_keep_V_write = 1'b1;
    end else begin
        out_stream_keep_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_stream_last_V_blk_n = out_stream_last_V_full_n;
    end else begin
        out_stream_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0) | (grp_vector_multiply_hw_fu_193_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        out_stream_last_V_write = 1'b1;
    end else begin
        out_stream_last_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_stream_strb_V_blk_n = out_stream_strb_V_full_n;
    end else begin
        out_stream_strb_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0) | (grp_vector_multiply_hw_fu_193_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        out_stream_strb_V_write = 1'b1;
    end else begin
        out_stream_strb_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_stream_user_V_blk_n = out_stream_user_V_full_n;
    end else begin
        out_stream_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0) | (grp_vector_multiply_hw_fu_193_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        out_stream_user_V_write = 1'b1;
    end else begin
        out_stream_user_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((grp_pop_stream_fu_199_e_user_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_strb_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_keep_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_data_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_dest_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_id_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_last_V_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond_fu_243_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((grp_pop_stream_fu_199_e_user_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_strb_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_keep_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_data_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_dest_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_id_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_last_V_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0) | (grp_vector_multiply_hw_fu_193_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state3 = ((grp_pop_stream_fu_199_e_user_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_strb_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_keep_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_data_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_dest_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_id_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_last_V_blk_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((grp_pop_stream_fu_199_e_user_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_strb_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_keep_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_data_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_dest_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_id_V_blk_n == 1'b0) | (grp_pop_stream_fu_199_e_last_V_blk_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((out_stream_dest_V_full_n == 1'b0) | (out_stream_id_V_full_n == 1'b0) | (out_stream_last_V_full_n == 1'b0) | (out_stream_user_V_full_n == 1'b0) | (out_stream_strb_V_full_n == 1'b0) | (out_stream_keep_V_full_n == 1'b0) | (out_stream_data_V_full_n == 1'b0));
end

assign exitcond1_fu_226_p2 = ((i_reg_169 == 10'd784) ? 1'b1 : 1'b0);

assign exitcond_fu_243_p2 = ((i1_reg_181 == 10'd784) ? 1'b1 : 1'b0);

assign grp_vector_multiply_hw_fu_193_ap_start = grp_vector_multiply_hw_fu_193_ap_start_reg;

assign i_2_fu_232_p2 = (i_reg_169 + 10'd1);

assign i_3_fu_249_p2 = (i1_reg_181 + 10'd1);

assign out_stream_data_V_din = call_ret_push_stream_fu_219_ap_return;

assign out_stream_dest_V_din = 5'd0;

assign out_stream_id_V_din = 5'd0;

assign out_stream_keep_V_din = 4'd15;

assign out_stream_last_V_din = 1'd1;

assign out_stream_strb_V_din = 4'd15;

assign out_stream_user_V_din = 4'd0;

assign tmp_8_fu_255_p1 = i1_reg_181;

assign tmp_fu_238_p1 = i_reg_169;

endmodule //mult_accel_core
